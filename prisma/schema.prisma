// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
//output   = "../src/generated/prisma"

generator client {
  provider = "prisma-client-js"

}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        String   @id @default(cuid())
  name      String?
  email     String   @unique
  password  String
  image     String?
  createdAt DateTime @default(now())

  moodLogs      MoodLog[]
  journalEntries JournalEntry[]
  selfCareActivities SelfCareActivity[]
  gamificationStats  GamificationStats?
}

model MoodLog {
  id        String   @id @default(cuid())
  userId    String
  mood      String
  note      String?
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
}

model JournalEntry {
  id        String   @id @default(cuid())
  userId    String
  prompt    String
  content   String
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
}

model SelfCareActivity {
  id        String   @id @default(cuid())
  userId    String
  activity  String
  completed Boolean  @default(false)
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
}

model GamificationStats {
  id             String  @id @default(cuid())
  userId         String  @unique
  points         Int     @default(0)
  moodStreak     Int     @default(0)
  journalStreak  Int     @default(0)

  user           User    @relation(fields: [userId], references: [id])
}
